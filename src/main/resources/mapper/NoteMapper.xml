<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.tivnan.studentls.dao.NoteMapper">
    <resultMap id="BaseResultMap" type="cn.tivnan.studentls.bean.Note">
        <id column="note_id" jdbcType="INTEGER" property="noteId"/>
        <result column="start_time" jdbcType="CHAR" property="startTime"/>
        <result column="end_time" jdbcType="CHAR" property="endTime"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="student_id" jdbcType="INTEGER" property="studentId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    note_id, start_time, end_time, content, state, type, student_id
  </sql>

    <resultMap id="NotesNeedReviewResultMap" type="cn.tivnan.studentls.bean.vo.NoteNeedReviewVO">
        <id column="reqId" jdbcType="CHAR" property="reqId"/>
        <result column="sectionId" jdbcType="INTEGER" property="sectionId"/>
        <!--<result column="courseId" jdbcType="INTEGER" property="courseId"/>-->
        <!--<result column="courseName" jdbcType="VARCHAR" property="courseName"/>-->
        <!--<result column="sectionTime" jdbcType="VARCHAR" property="sectionTime"/>-->
        <result column="stuName" jdbcType="CHAR" property="stuName"/>
        <result column="stuId" jdbcType="INTEGER" property="stuId"/>
        <result column="reqType" jdbcType="INTEGER" property="reqType"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
    </resultMap>
    <select id="getNoteNeedReview" resultMap="NotesNeedReviewResultMap">
        select n.note_id as reqId,
       s.time_id as sectionId,
       s2.id     as stuId,
       s2.name   as stuName,
       n.type    as reqType,
       n.content as content
from selects s
         left join note n on n.note_id = s.note_id
         left join student s2 on s2.id = n.student_id
where n.state >= 1
and s.time_id=#{timeId}
  and (select count(*)
       from reviews
       where reviews.teacher_id = #{id}
         and reviews.note_id = n.note_id
         and reviews.time_id =#{timeId}
) !=1
    </select>


    <select id="selectByExample" parameterType="cn.tivnan.studentls.bean.NoteExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from note
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from note
        where note_id = #{noteId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from note
    where note_id = #{noteId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="cn.tivnan.studentls.bean.NoteExample">
        delete from note
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>

    <insert id="insert" parameterType="cn.tivnan.studentls.bean.Note" useGeneratedKeys="true" keyColumn="note_id"
            keyProperty="noteId">
    insert into note (start_time, end_time,
      content, state, type,
      student_id)
    values (#{startTime,jdbcType=CHAR}, #{endTime,jdbcType=CHAR},
      #{content,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{type,jdbcType=INTEGER},
      #{studentId,jdbcType=INTEGER})
  </insert>

    <insert id="insertSelective" parameterType="cn.tivnan.studentls.bean.Note">
        insert into note
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="noteId != null">
                note_id,
            </if>
            <if test="startTime != null">
                start_time,
            </if>
            <if test="endTime != null">
                end_time,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="studentId != null">
                student_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="noteId != null">
                #{noteId,jdbcType=INTEGER},
            </if>
            <if test="startTime != null">
                #{startTime,jdbcType=CHAR},
            </if>
            <if test="endTime != null">
                #{endTime,jdbcType=CHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="studentId != null">
                #{studentId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="cn.tivnan.studentls.bean.NoteExample" resultType="java.lang.Long">
        select count(*) from note
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update note
        <set>
            <if test="record.noteId != null">
                note_id = #{record.noteId,jdbcType=INTEGER},
            </if>
            <if test="record.startTime != null">
                start_time = #{record.startTime,jdbcType=CHAR},
            </if>
            <if test="record.endTime != null">
                end_time = #{record.endTime,jdbcType=CHAR},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=VARCHAR},
            </if>
            <if test="record.state != null">
                state = #{record.state,jdbcType=INTEGER},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=INTEGER},
            </if>
            <if test="record.studentId != null">
                student_id = #{record.studentId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update note
        set note_id = #{record.noteId,jdbcType=INTEGER},
        start_time = #{record.startTime,jdbcType=CHAR},
        end_time = #{record.endTime,jdbcType=CHAR},
        content = #{record.content,jdbcType=VARCHAR},
        state = #{record.state,jdbcType=INTEGER},
        type = #{record.type,jdbcType=INTEGER},
        student_id = #{record.studentId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.tivnan.studentls.bean.Note">
        update note
        <set>
            <if test="startTime != null">
                start_time = #{startTime,jdbcType=CHAR},
            </if>
            <if test="endTime != null">
                end_time = #{endTime,jdbcType=CHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="studentId != null">
                student_id = #{studentId,jdbcType=INTEGER},
            </if>
        </set>
        where note_id = #{noteId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.tivnan.studentls.bean.Note">
    update note
    set start_time = #{startTime,jdbcType=CHAR},
      end_time = #{endTime,jdbcType=CHAR},
      content = #{content,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      student_id = #{studentId,jdbcType=INTEGER}
    where note_id = #{noteId,jdbcType=INTEGER}
  </update>
</mapper>